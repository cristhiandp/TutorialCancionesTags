name: CI

# Controls when the action will run.
on:
  push:
    branches: [main, desarrollo]
  pull_request:
    branches: [main, desarrollo]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  job1:
    name: Run tests
    runs-on: ubuntu-latest
    outputs:
      message_ok: ${{ steps.validate-success-test.outputs.response }}
      message_fail: ${{ steps.validate-fails-test.outputs.response }}
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v3

      - name: Configuración de entorno de python
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"

      - name: Instalación de librerías y dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Correr pruebas
        id: correr-pruebas
        run: python -m unittest discover -s tests

      - name: Validate fails tests
        id: validate-fails-test
        if: ${{ failure() }}
        env:
          MESSAGE: Bummer
        run: echo "response=${MESSAGE}" >> "$GITHUB_OUTPUT"

      - name: Validate success tests
        id: validate-success-test
        if: ${{ success() }}
        env:
          MESSAGE: Ok
        # run: echo "::set-output name=response::${MESSAGE}"
        run: echo "response=${MESSAGE}" >> "$GITHUB_OUTPUT"

      - name: calculate coverage
        run: |
          coverage run -m unittest discover -s tests
          coverage report -m
  job2:
    name: print some text
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - name: print
        id: print
        run: |
          echo "Failed: ${{ needs.job1.outputs.message_fail }}"
          echo "Success: ${{ needs.job1.outputs.message_ok }}"
  job3:
    name: integrate changes
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v3

      - name: Create a release branch
        run: |
          ls -al
          git checkout -b release
          git push -f -u origin release
      - name: merge release -> main
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: release
          target-branch: main
